#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UmlGraph version 4.6 (http://www.spinellis.gr/sw/umlgraph)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	// org.soul.splitWord.NewWordDetection
	c2866 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NewWordDetection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> NewWordDetection </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + NewWordDetection() </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// org.soul.domain.Graph
	c2903 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../domain/Graph.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> Graph </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + Graph(str : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// org.soul.domain.Term
	c2906 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../domain/Term.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> Term </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + Term(name : String, offe : int, termNatures : TermNatures) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// org.soul.domain.Graph NAVASSOC java.lang.String
	c2903:p -> c2943:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Graph NAVASSOC org.soul.domain.Term
	c2903:p -> c2906:p [taillabel="", label="", headlabel="*", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Graph NAVASSOC org.soul.domain.Term
	c2903:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Graph NAVASSOC org.soul.domain.Term
	c2903:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Term NAVASSOC java.lang.String
	c2906:p -> c2943:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Term NAVASSOC org.soul.domain.Term
	c2906:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Term NAVASSOC org.soul.domain.Term
	c2906:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.domain.Term NAVASSOC org.soul.domain.Term
	c2906:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// org.soul.splitWord.NewWordDetection DEPEND java.util.Collection<E>
	c2866:p -> c2944:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.soul.splitWord.NewWordDetection DEPEND org.soul.domain.Graph
	c2866:p -> c2903:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.soul.splitWord.NewWordDetection DEPEND org.soul.domain.Term
	c2866:p -> c2906:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.soul.splitWord.NewWordDetection DEPEND java.lang.String
	c2866:p -> c2943:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.soul.domain.Term DEPEND java.lang.String
	c2906:p -> c2943:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// java.util.Collection<E>
	c2944 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/Collection.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> &laquo;interface&raquo; </td></tr>
			<tr><td> Collection&lt;E&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
	// java.lang.String
	c2943 [label=<<table border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td> String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
			<tr><td align="left"> + String() </td></tr>
			<tr><td align="left"> + String(arg0 : String) </td></tr>
			<tr><td align="left"> + String(arg0 : char[]) </td></tr>
			<tr><td align="left"> + String(arg0 : char[], arg1 : int, arg2 : int) </td></tr>
			<tr><td align="left"> + String(arg0 : int[], arg1 : int, arg2 : int) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : int) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : int) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : String) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : int, arg2 : int, arg3 : Charset) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : String) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : Charset) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
			<tr><td align="left"> + String(arg0 : byte[]) </td></tr>
			<tr><td align="left"> + String(arg0 : StringBuffer) </td></tr>
			<tr><td align="left"> + String(arg0 : StringBuilder) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=9.0];
}

